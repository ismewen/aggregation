version: "3"
# api, worker, beat, mq, mysql,
services:

  cluster-api:
    build: .
    networks:
      - mq
      - db
      - nginx_network
    ports:
      - '8000:8000'
    environment:
      - OAUTHLIB_INSECURE_TRANSPORT=True
    depends_on:
      - cluster-db
      - cluster-mq
    volumes:
      - ./config/settings/settings.py:/code/aggregation/settings/settings.py
    restart: always

  cluster-celery-worker:
    build: .
    networks:
      - mq
      - db
    depends_on:
      - cluster-db
      - cluster-mq
    volumes:
      - ./config/settings/settings.py:/code/aggregation/settings/settings.py
    command: 'celery -A celery_app.celery worker -c 4 -Q celery'
    restart: always

  cluster-celery-beat:
    build: .
    networks:
      - mq
      - db
    depends_on:
      - cluster-db
      - cluster-mq
    volumes:
      - ./config/settings/settings.py:/code/aggregation/settings/settings.py
    command: 'celery -A celery_app.celery beat --pidfile=/opt/celeryd.pid'
    restart: always

  cluster-db:
    image: postgres:12.0
    restart: always
    environment:
      POSTGRES_PASSWORD: ismewen
      POSTGRES_USER: ismewen
      POSTGRES_DB: aggregation
    volumes:
      - postgresql_volume:/var/lib/postgresql/data
    networks:
      - db

  cluster-mq:
    image: rabbitmq:3.8-rc-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ismewen
      RABBITMQ_DEFAULT_PASS: ismewen
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_volume:/var/lib/rabbitmq
    networks:
      - mq


networks:
  db:
  mq:
  nginx_network:

volumes:
  postgresql_volume:
  rabbitmq_volume:
